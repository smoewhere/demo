buildscript {
    allprojects {
        repositories {
            mavenLocal()
            maven { url 'http://maven.aliyun.com/nexus/content/repositories/central/' }
            mavenCentral()
        }
    }
}

plugins {
    id 'java'
}

group 'org.fan.demo'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    set('guavaVersion', "29.0-jre")
    set("slf4jVersion", "1.7.30")
    set("jacksonVersion", "2.11.1")
    set("log4j2Version", "2.13.3")
    set("lombokVersion", "1.18.12")
    set("gsonVersion", "2.8.6")
    set("mysqlVersion", "8.0.21")
    set("druidVersion", "1.1.23")
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    compile "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    // 日志start
    implementation "org.apache.logging.log4j:log4j-core:${log4j2Version}"
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation("org.apache.logging.log4j:log4j-slf4j-impl:${log4j2Version}") {
        exclude([
                module: "log4j-core"
        ])
    }
    implementation("org.slf4j:jcl-over-slf4j:${slf4jVersion}")
    // 日志end
    implementation("com.google.code.gson:gson:${gsonVersion}")
    implementation "com.alibaba:druid:${druidVersion}"
    implementation "mysql:mysql-connector-java:${mysqlVersion}"
    implementation "com.google.guava:guava:${guavaVersion}"
    // 导入本地jar
    compile fileTree(dir: 'libs', includes: ['*.jar'])
}

task showRepositories {
    println "All repositories url:"
    println repositories.collect { it.url }
}

